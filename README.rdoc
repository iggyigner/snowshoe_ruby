Snowshoe API Ruby Client
============

The ruby client submits an array of points to the Snowshoe API for authentication. The API will respond with either the serial of the matched stamp (a success!) or any number of errors.

## Dependencies
 - oauth

## Installation
```ruby
gem install snowshoe
```


## Usage: Setting up the client and making a POST

On instantiation of the Snowshoe client, you can optional pass your Snowshoe app key and secret. Otherwise, the client object will look in your environment variable hash for SNOWSHOE_APP_KEY & SNOWSHOE_APP_SECRET respectively.

Currently, all posts are made to v2 of the API at http://beta.snowshoestamp.com/v2/stamp.

The data object is constructed from the point data sent by your front-end stamp screen. (SEE: "documentation link to hosting your own stamp screen" )

```ruby
client = Snowshoe::Client.new(key, secret) # optional key & secret arguments

data = { "data" => Base64.encode64(request["data"]) } # optional Base64 encoding
response = client.post(data)

if response.include? "stamp"
  # Serve success asset...
else
  # Handle errors...
end
```

Below are examples of success and error JSON responses.

```javascript
// Success
{
  "stamp": {
      "serial": "DEV-STAMP"
    },
  "receipt": "s+JGMBVWHzJW2NmXwCkwUWRjpRw=",
  "secure": false,
  "created": "2015-03-17 11:27:33.014149"
}

// Error
{
  "error": {
      "message": "Stamp not found",
      "code": 32
    },
  "receipt": "t6Qm3KqF7XrUDl1jf8ib5nt3Kow=",
  "secure": false,
  "created": "2015-03-17 11:27:48.235046"
}
```

## Tests
(Coming soon)


## Contribute
Join us in improving this client by making a pull request.

## License
MIT (LICENSE file coming soon)
